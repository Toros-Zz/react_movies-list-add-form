{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","hasImgUrlError","hasImdbUrlError","isDisabledButton","handlerOnChange","event","target","name","value","setState","validationUrl","test","handlerFormSubmit","preventDefault","props","onAdd","this","onSubmit","htmlFor","type","id","onChange","required","classNames","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63385b82.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport classNames from 'classnames/bind';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  hasImgUrlError: boolean,\n  hasImdbUrlError: boolean,\n  isDisabledButton: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    hasImgUrlError: false,\n    hasImdbUrlError: false,\n    isDisabledButton: false,\n  };\n\n  handlerOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'imgUrl':\n        this.setState((state) => ({\n          ...state,\n          hasImgUrlError: this.validationUrl(value),\n          isDisabledButton: this.validationUrl(value),\n          [name]: value,\n        }));\n        break;\n      case 'imdbUrl':\n        this.setState((state) => ({\n          ...state,\n          hasImdbUrlError: this.validationUrl(value),\n          isDisabledButton: this.validationUrl(value),\n          [name]: value,\n        }));\n        break;\n      default:\n        this.setState((state) => ({\n          ...state,\n          [name]: value,\n        }));\n    }\n  };\n\n  validationUrl = (value: string) => {\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return !regex.test(value);\n  };\n\n  handlerFormSubmit = (event: React.MouseEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(movie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      hasImgUrlError: false,\n      hasImdbUrlError: false,\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      hasImgUrlError,\n      hasImdbUrlError,\n      isDisabledButton,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handlerFormSubmit}\n        className=\"form\"\n      >\n        <label\n          htmlFor=\"title\"\n          className=\"form__input-label\"\n        >\n          Title&nbsp;\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            value={title}\n            onChange={this.handlerOnChange}\n            required\n            className=\"input form__input\"\n          />\n        </label>\n        <label\n          htmlFor=\"description\"\n          className=\"form__input-label\"\n        >\n          Description&nbsp;\n          <input\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            value={description}\n            onChange={this.handlerOnChange}\n            className=\"input form__input\"\n          />\n        </label>\n        <label\n          htmlFor=\"imgUrl\"\n          className={\n            classNames('form__input-label',\n              { 'form__input-label__error': hasImgUrlError })\n          }\n        >\n          ImgUrl&nbsp;\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            id=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handlerOnChange}\n            className={\n              classNames('input form__input',\n                { 'is-danger': hasImgUrlError })\n            }\n            required\n          />\n          {\n            hasImgUrlError\n            && (\n              <span className=\"has-text-danger form__error\">\n                Please enter correct image URL\n              </span>\n            )\n          }\n        </label>\n        <label\n          htmlFor=\"imdbUrl\"\n          className={\n            classNames('form__input-label',\n              { 'form__input-label__error': hasImdbUrlError })\n          }\n        >\n          ImdbUrl&nbsp;\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            id=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handlerOnChange}\n            className={\n              classNames('input form__input',\n                { 'is-danger': hasImdbUrlError })\n            }\n            required\n          />\n          {\n            hasImdbUrlError\n            && (\n              <span className=\"has-text-danger form__error\">\n                Please enter correct IMDd\n              </span>\n            )\n          }\n        </label>\n        <label\n          htmlFor=\"imdbId\"\n          className=\"form__input-label\"\n        >\n          ImdbId&nbsp;\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            id=\"imdbId\"\n            value={imdbId}\n            onChange={this.handlerOnChange}\n            className=\"input form__input\"\n            required\n          />\n        </label>\n        <button\n          type=\"submit\"\n          className=\"button\"\n          disabled={isDisabledButton}\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}